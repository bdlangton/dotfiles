#!/usr/bin/php
<?php

/**
 * @file
 * Checks if contrib modules were updated that build.make was also updated.
 */

// Initial values for some variables.
$files = [];
$rev = [];
$return = 0;
$exit_status = 0;
$root_dir = '/';

// Output colors.
$red = "\e[0;31m";
$yellow = "\e[0;33m";
$no_color = "\e[0m";

// Get the top level directory.
exec('git rev-parse --show-toplevel', $root_dir, $return);

// If the contrib path doesn't exist, bail.
$contrib_path = 'docroot/sites/all/modules/contrib';
if (!file_exists($root_dir . '/' . $contrib_path)) {
  return;
}

// Find contrib files that have been changed in this commit.
exec('git rev-parse --verify HEAD 2> /dev/null', $rev, $return);
$against = $return == 0 ? 'HEAD' : '4b825dc642cb6eb9a060e54bf8d69288fbee4904';
exec("git diff-index --cached --name-only {$against} {$contrib_path}", $files);

// If no contrib files were changed, then there is no issue.
if (empty($files)) {
  return;
}

// If the build make file doesn't exist, bail.
$build_make = 'build.make';
if (!file_exists($root_dir . '/' . $build_make)) {
  return;
}

// Check if the build.make file was changed.
$build_make_changed = FALSE;
exec("git diff-index --cached --name-only {$against} {$build_make}", $build_make_changed);

// If the build make was changed, then there is no issue.
if (!empty($build_make_changed)) {
  return;
}

$exit_status = 1;
echo "\n{$red}Error:{$no_color} Commit was aborted because the following file(s) were updated but build.make wasn't:\n" . implode("\n", $files), "\n";

exit($exit_status);
