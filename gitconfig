[user]
  name = Barrett Langton
  email = bdlangton@gmail.com
[core]
  editor = vim
  filemode = false
  excludesFile = ~/.gitignore
[merge]
  tool = vimdiff
  renamelimit = 1382
[alias]
  fa = fetch --all
  # Get status (short).
  st = status -s
  ci = commit
  # Quick commit and amend without editing the commit msg.
  ca = commit --amend --no-edit
  co = checkout
  # Checkout new branch w/o tracking remote branch as tracking (if specified).
  nb = checkout --no-track -b
  br = branch
  # Delete branch (can't be currently on the deleted branch).
  db = branch -D
  # Push force (as long as other users haven't made pushes that your local doesn't know about).
  pf = push --force-with-lease
  psu = push --set-upstream
  rs = reset
  rsh = reset --hard
  d = diff --word-diff=color
  # Show changes staged for the next commit.
  dc = diff --cached
  sa = stash apply
  sl = stash list
  ss = stash save
  sp = stash pop
  cp = cherry-pick
  ch = cherry -v
  bi = bisect
  # Clean out untracked files and directories.
  cl = clean -fd
  # Show all remotes verbosely.
  remotes = remote -v
  # Show log with stats.
  l = log --stat
  # Ls-tree (must provide a commit/tree hash).
  ls = ls-tree
  # History in pretty format.
  hist = log --pretty=format:\"%C(yellow)%h %C(auto)%ad %C(cyan)%an %C(bold)%s%d%n%n%-b%C(auto)\" --graph --date=short
  # History in pretty format with stats.
  hists = log --pretty=format:\"%C(yellow)%h %C(auto)%ad %C(cyan)%an %C(bold)%s%d%n%n%-b%C(auto)\" --graph --date=short --stat
  # Show history of commits that are local but not in specified branch/hash.
  # Required to provide a branch/hash after 'histdiff'.
  histdiff = log --pretty=format:\"%C(yellow)%h %C(auto)%ad %C(cyan)%an %C(bold)%s%d%n%n%-b%C(auto)\" --graph --date=short HEAD --not
  # Show history of specific file even if it is currently deleted.
  filehist = log --full-history --
  # Git log just for the last commit.
  last = log -1 HEAD
  # Show type of specific hash.
  type = cat-file -t
  # Show dump info for specific hash (tree hash, parent hash[es], author, etc).
  dump = cat-file -p
  # Checkout deleted files (takes a parameter to limit the deletion to a specific path).
  codel = "!f() { git diff --no-renames --name-only --diff-filter=D -z $1 | xargs -0 git checkout --; }; f"
  pu = ![[ $(git config "branch.$(git symbolic-ref --short HEAD).merge") = '' ]] && git push -u origin $(git symbolic-ref --short HEAD) || git push
  # Display the number of commits in current branch that aren't in compared branch.
  count = "!f() { compareBranch=${1-master}; git rev-list --count HEAD ^$compareBranch; }; f"
  # Open conflicts in vim.
  conflicted = !vim +Conflicted
[color]
  ui = auto
[push]
  default = current
[init]
  templatedir = ~/.git-templates
[include]
  path = ~/.gitconfig.local
[commit]
  template = ~/.gitmessage
[pull]
  rebase = true
[advice]
  detachedHead = false
