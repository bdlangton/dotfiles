" Prompt for a single input to pass to Drupal Console.
function! DrupalSingleInput(command, text)
  call inputsave()
  let input = input(a:text)
  call inputrestore()
  execute 'VtrSendCommandToRunner drupal' g:drush_alias a:command input
endfunction

" Prompt for a single input to pass to Drush.
function! DrushSingleInput(command, text)
  call inputsave()
  let input = input(a:text)
  call inputrestore()
  execute 'VtrSendCommandToRunner drush' g:drush_alias a:command input
endfunction

" Execute a drush command.
function! ExecuteDrushCommand(command)
  execute 'VtrSendCommandToRunner drush' g:drush_alias a:command
endfunction

" Execute command to send to runner.
function! ExecuteVtrCommand(command)
  execute 'VtrSendCommandToRunner ' a:command
endfunction

" Prompt for a drush alias to use.
function! SetDrushAlias()
  call inputsave()
  let g:drush_alias = input('Use drush alias: ')
  call inputrestore()
  call EchoDrushAlias()
endfunction

" Echo the drush alias.
function! EchoDrushAlias()
  echohl String | echo "\rDrush alias set to: " . g:drush_alias | echohl None
endfunction

" Set default drush alias to blank.
let g:drush_alias = ''

" Drupal mappings to the vim-tmux-runner.
nnoremap <Leader>dcc :call ExecuteDrushCommand('cr')<CR>
nnoremap <Leader>dud :call ExecuteDrushCommand('updb -y')<CR>
nnoremap <Leader>dul :call ExecuteDrushCommand('uli')<CR>
nnoremap <Leader>dwd :call ExecuteDrushCommand('watchdog-show')<CR>
nnoremap <Leader>dce :call ExecuteDrushCommand('cex sync -y')<CR>
nnoremap <Leader>dci :call ExecuteDrushCommand('cim sync -y')<CR>
nnoremap <Leader>dmi :call DrushSingleInput('en -y', 'Enter module to install: ')<CR>
nnoremap <Leader>dmu :call DrushSingleInput('pmu -y', 'Enter module to uninstall: ')<CR>
nnoremap <Leader>dsa :call SetDrushAlias()<CR>
nnoremap <Leader>dsl :call EchoDrushAlias()<CR>
nnoremap <Leader>drc :call DrushSingleInput('', 'Enter the drush command: ')<CR>

" When adding a parenthesis that is succeeded by a non-newline character, don't
" add the closing parenthesis.
call lexima#add_rule({'char': '(', 'at': '\%#.', 'delete': '1'})

" Set tags file.
let g:autotagTagsFile = 'tags'

augroup programming
  " Commentary comment string for php.
  autocmd FileType php setlocal commentstring=//\ %s

  " Set *.theme files to be php filetype.
  autocmd BufRead,BufNewFile *.theme setlocal filetype=php
augroup end

" vim:ft=vim
