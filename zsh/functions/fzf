# A helper function to join multi-line output from fzf.
join-lines() {
  local item
  while read item; do
    echo -n "${(q)item} "
  done
}

# Git helper to bind Ctrl+g Ctrl+<key> to git/fzf commands.
bind-git-helper() {
  local c
  for c in $@; do
    eval "fzf-g$c-widget() { local result=\$(fzf-g$c | join-lines); zle reset-prompt; LBUFFER+=\$result }"
    eval "zle -N fzf-g$c-widget"
    eval "bindkey '^g^$c' fzf-g$c-widget"
  done
}

# Check if we're in a git repo.
is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

fzf-down() {
  fzf --height 50% "$@" --border
}

# Git commit browser (enter for show, ctrl-d for diff, ` toggles sort).
ghist() {
  is_in_git_repo || return
  git log --color=always --graph --date=short \
      --format="%C(yellow)%h %C(auto)%ad %C(cyan)%an %C(bold)%s%d%C(auto)" \
      "$@" |
  fzf-down --preview-window right:70% \
      --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                {}
FZF-EOF"
}

# Search for git branches.
fzf-gt() {
  is_in_git_repo || return
  git tag --sort -version:refname |
  fzf-down --multi --preview-window right:70% \
    --preview 'git show --color=always {} | head -'$LINES
}

# Search for git files.
fzf-gf() {
  is_in_git_repo || return
  git -c color.status=always status --short |
  fzf-down -m --ansi --nth 2..,.. \
    --preview '(git diff --color=always -- {-1} | sed 1,4d; cat {-1}) | head -500' |
  cut -c4- | sed 's/.* -> //'
}

# Search for git branches.
fzf-gb() {
  is_in_git_repo || return
  git branch -a --color=always | grep -v '/HEAD\s' | sort |
  fzf-down --ansi --multi --tac --preview-window right:70% \
    --preview 'git log --oneline --color=always --graph --date=short --format="%C(yellow)%h %C(auto)%ad %C(cyan)%an %C(bold)%s%d%C(auto)" $(sed s/^..// <<< {} | cut -d" " -f1) | head -'$LINES |
  sed 's/^..//' | cut -d' ' -f1 |
  sed 's#^remotes/##'
}

# Search for git commit hashes.
fzf-gg() {
  is_in_git_repo || return
  git log --date=short --format="%C(yellow)%h %C(auto)%ad %C(cyan)%an %C(bold)%s%d%C(auto)" --graph --color=always |
  fzf-down --ansi --no-sort --reverse --multi --bind 'ctrl-s:toggle-sort' \
    --header 'Press CTRL-S to toggle sort' \
    --preview 'grep -o "[a-f0-9]\{7,\}" <<< {} | xargs git show --color=always | head -'$LINES |
  grep -o "[a-f0-9]\{7,\}"
}

# Search for git remotes.
fzf-gr() {
  is_in_git_repo || return
  git remote -v | awk '{print $1 "\t" $2}' | uniq |
  fzf-down --tac \
    --preview 'git log --oneline --color=always --graph --date=short --pretty="format:%C(yellow)%h %C(auto)%ad %C(cyan)%an %C(bold)%s%d%C(auto)" {1} | head -200' |
  cut -d$'\t' -f1
}
